# example nvpy config file
# edit at least the simplenote login details
# then rename to .nvpy.cfg in your home directory.

# all nvpy releases AFTER 0.8 have to have this section
# in 0.8 and older, it used to be [default]
[nvpy]
sn_username = your_simplenote_username
sn_password = your_simplenote_password

# on Linux, there are four different themes you can try here:
# clam, alt, default, classic
# on all platforms, 'default' will pick something appropriate
# see here for examples: https://blog.tcl.tk/11075
# on Linux, I prefer 'clam'
theme = default

# font for note editing area
# on windows, consider: consolas, courier
# on linux, consider: droid sans mono, courier (install fonts-droid package first)
# on osx, consider: menlo
# we have "courier" as default, as that maps to a monospace font on all
# platforms.
font_family = courier
font_size = 14

# font for notes list
# helvetica maps to sans font on all platforms
list_font_family = helvetica
# font for notes list when layout = vertical and print_columns = 1
# courier maps to monospaced on all platforms
list_font_family_fixed = Courier
list_font_size = 10

# hide some list elements
#list_hide_time = 1
#list_hide_tags = 1

# Underline URLs in notes
# default: true
# underline_urls = true

# UI layout
# horizontal: notes list on the left, current note on the right
# vertical: notes list full width at the top, current note below that
# default is horizontal
layout = horizontal

# if the vertical layout is choosen, this option can be used
# to print the notelist in columns.
# The list_font_family_fixed will be used
print_columns = 1


# sort pinned notes on top
pinned_ontop = 1

# default search mode is "gstyle". For example the search string:
# t:work tag:computer solder cpu "fix psu"
# will find all notes with tags
# that start with work and with computer, and containing the words "solder"
# and "cpu" (not necessarily next to each other or even the same order) and
# the phrase "fix psu" juxtaposed
# other search_mode options:
# "regexp" - this will give you full regular expression searching. slower
# than gstyle, but preferred by some for its specificity
search_mode = gstyle


# search case sensitive or not
# default: case sensitive
case_sensitive = 1

# search also in tags
# default: yes
search_tags = 1

# dump notes as text
# EXPERIMENTAL FEATURE! backup your notes before testing.
# default: no
notes_as_txt = 0

# txt notes directory relative to home
#txt_path = Notes2

# replace spaces in filenames/titles with underscores
# WARNING!! Should remove all notes from ~/.nvpy/notes before change this option.
# default: 1
#replace_filename_spaces = 0

# filetypes to read in (comma-separated)
#read_txt_extensions: txt,mkdn,md,mdown,markdown

# uncomment this to disable simplenote sync altogether
# default is to sync with simplenote
#simplenote_sync = 0

# uncomment this to override the default reStructuredText stylesheet with one of
# your own css files.  Note that this is only useful when you are rendering a
# reStructuredText (reST) note to HTML.
#rest_css_path = /path/to/my/stylesheet.css


# Colors (light theme)
#text_color = black
#selected_note_color = light blue
#note_info_color = dark gray
#highlight_note_info_color = light yellow
#url_color = blue
#background_color = white
#highlight_background_color = yellow
#url_selection_background_color = yellow

# Colors (dark theme)
#text_color = white
#selected_note_color = #04a
#note_info_color = light gray
#highlight_note_info_color = #440
#url_color = #08f
#background_color = black
#highlight_background_color = #440
#url_selection_background_color = #440

# Sets the sort mode
# 0: sort in alphabetic order
# 1: sort by modification date in descending order
# 2: sort by creation date in descending order
# 3: sort in alphanumeric order
# default: 1 (sort by modification date)
#sort_mode = 1

# Css file path
# that css file need to include style for the 'haiine markdown-body' class.
# md_css_path = path/to/css/file

# extensions for markdown.py
# if you use multiple extensions, separate with spaces.
# md_extensions = markdown.extensions.codehilite  markdown.extensions.tables

# keep a search keyword.
# if sets 'true', keeping it unless restarted or manually deleted.
# default: false
#keep_search_keyword = true

# show delete confirmation dialog before delete
# default: true
#confirm_delete = false

# exit by hitting escape when in empty search box
# default: false
#escape_to_exit = false

# show exit confirmation dialog
# default: false
#confirm_exit = true

# streameline interface by omitting certain elements
# default: false
#streamline_interface = false

# Generate profile into data directory.
# This option useful for performance issue analysis.
# default: false
#use_profiler = true
